{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\containers\\\\graph\\\\GraphContainer.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Graph from '../../component/graph/Graph';\nimport { register } from '../../modules/write';\nimport Node, { lookschedule, insertTable, composeTree, search } from '../../lib/tree/tree'; // 안겹친다는 가정이 필요\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\n//const insertTable=function(dst,src)\n\nconst GraphContainer = () => {\n  const [TdrawList, setTdrawList] = useState([{\n    id: 1,\n    name: \"회로이론\"\n  }, {\n    id: 2,\n    name: \"알고리즘\"\n  }, {\n    id: 3,\n    name: \"논리회로\"\n  }]);\n  const [makingdrawList, setmakingdrawList] = useState([]);\n\n  const Delete = id => {\n    const aa = TdrawList.filter(e => e.id !== id);\n    setTdrawList(aa);\n  };\n\n  const dispatch = useDispatch();\n  const {\n    type1,\n    type2,\n    type3\n  } = useSelector(({\n    write\n  }) => ({\n    type1: write.type1,\n    type2: write.type2,\n    type3: write.type3\n  }));\n  const Maintable = {\n    type1,\n    type2,\n    type3\n  };\n\n  const makingDrawList = arr => {\n    let makingTable = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      // 한 과목씩 살펴봄\n      for (let j = 0; j < arr[i].classtime.keyword.length; j++) {\n        // 한 과목의 요일수\n        let day;\n\n        switch (arr[i].classtime.keyword[j]) {\n          case 't1':\n            day = 5;\n            break;\n\n          case 't2':\n            day = 24;\n            break;\n\n          case 't3':\n            day = 43;\n            break;\n\n          case 't4':\n            day = 62;\n            break;\n\n          case 't5':\n            day = 81;\n            break;\n\n          default:\n            break;\n        }\n\n        let dayarr = arr[i].classtime[arr[i].classtime.keyword[j]]; // 요일 배열\n\n        let timeleng = dayarr.length * 3.5;\n        let time = 9 + (dayarr[0] - 2) * 3.5;\n        makingTable.push({\n          x: day,\n          y: time,\n          ycolor: timeleng,\n          color: \"red\",\n          text: arr[i].classname\n        });\n      }\n    }\n\n    setmakingdrawList(makingTable);\n  };\n\n  const onCalculate = () => {\n    const root = composeTree('type1', Maintable);\n    let maxScoreTable = [];\n    let maxTable = [];\n\n    for (let i = 0; i < root.finalTable.length; i++) {\n      let n = root.finalTable[i];\n\n      if (n.score === root.maxScore) {\n        maxScoreTable.push(n);\n      }\n\n      if (n.deep === root.max) {\n        maxTable.push(n);\n      }\n    }\n\n    console.log('&&&&&&&&&&&&&&&학점 우선 시간표&&&&&&&&&&&&&&');\n\n    for (let i = 0; i < maxScoreTable.length; i++) {\n      let n = maxScoreTable[i];\n      let k = n.deep;\n      console.log('--------%d번째 시간표----------', i + 1);\n\n      for (let j = 0; j < k; j++) {\n        console.log('%d:%s %s %d ', j + 1, n.data.classname, n.data.profess, n.data.classscore);\n        n = n.adault;\n      }\n\n      console.log('[총 %d학점]', root.maxScore);\n      console.log('---------------------------');\n    }\n\n    console.log('&&&&&&&&&&&&&&&과목개수 우선 시간표&&&&&&&&&&&&&&');\n\n    for (let i = 0; i < maxTable.length; i++) {\n      let n = maxTable[i];\n      let a = n.score;\n      console.log('--------%d번째 시간표----------', i + 1);\n\n      for (let j = 0; j < root.max; j++) {\n        console.log('%d:%s %s %d', j + 1, n.data.classname, n.data.profess, n.data.classscore);\n        n = n.adault;\n      }\n\n      console.log('[총%d학점]', a);\n      console.log('---------------------------');\n    }\n\n    let a = maxTable[0];\n    let bb = [];\n\n    for (let i = 0; i < root.max; i++) {\n      bb.push(a.data);\n      a = a.adault;\n    }\n\n    makingDrawList(bb);\n  };\n\n  return React.createElement(Graph, {\n    onCalculate: onCalculate,\n    TdrawList: TdrawList,\n    Delete: Delete,\n    makingdrawList: makingdrawList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  });\n};\n\nexport default GraphContainer;","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/containers/graph/GraphContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","useDispatch","withRouter","Graph","register","Node","lookschedule","insertTable","composeTree","search","GraphContainer","TdrawList","setTdrawList","id","name","makingdrawList","setmakingdrawList","Delete","aa","filter","e","dispatch","type1","type2","type3","write","Maintable","makingDrawList","arr","makingTable","i","length","j","classtime","keyword","day","dayarr","timeleng","time","push","x","y","ycolor","color","text","classname","onCalculate","root","maxScoreTable","maxTable","finalTable","n","score","maxScore","deep","max","console","log","k","data","profess","classscore","adault","a","bb"],"mappings":"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","sourcesContent":["\r\nimport React , {useState,useCallback,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Graph from '../../component/graph/Graph';\r\n\r\nimport {register} from '../../modules/write';\r\n\r\nimport Node ,{lookschedule,insertTable,composeTree ,search} from '../../lib/tree/tree';\r\n\r\n\r\n// 안겹친다는 가정이 필요\r\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \r\n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\r\n//const insertTable=function(dst,src)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst GraphContainer=()=>{\r\n\r\n\r\n    const [TdrawList,setTdrawList]=useState([{\r\n        id:1,\r\n        name:\"회로이론\"\r\n    \r\n    },{\r\n    \r\n        id:2,\r\n        name:\"알고리즘\"\r\n    },{\r\n        id:3,\r\n        name:\"논리회로\"\r\n    \r\n    }]);\r\n\r\n\r\n    const [makingdrawList,setmakingdrawList]=useState([]);\r\n\r\n\r\n    const Delete=(id)=>{\r\n\r\n       const  aa=TdrawList.filter(e=>(e.id!==id));\r\n       \r\n       setTdrawList(aa);\r\n          \r\n      };\r\n      \r\n      \r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {type1,type2,type3}=useSelector(({write})=>({\r\n\r\n       type1:write.type1,\r\n       type2:write.type2,\r\n       type3:write.type3,\r\n    }\r\n    )); \r\n\r\n    const Maintable={\r\n        type1,type2,type3\r\n    };\r\n    \r\n    const makingDrawList=(arr)=>{\r\n\r\n        let makingTable=[];\r\n\r\n        for(let i=0;i<arr.length;i++){  // 한 과목씩 살펴봄\r\n\r\n            for(let j=0;j<arr[i].classtime.keyword.length;j++){  // 한 과목의 요일수\r\n                \r\n                let day;\r\n\r\n                switch(arr[i].classtime.keyword[j]){\r\n                    case 't1': day=5; break;\r\n                    case 't2': day=24; break;\r\n                    case 't3': day=43; break;\r\n                    case 't4': day=62; break;\r\n                    case 't5': day=81; break;\r\n                    default: break;\r\n\r\n                }\r\n\r\n              \r\n\r\n              let dayarr=  arr[i].classtime[arr[i].classtime.keyword[j]]; // 요일 배열\r\n                \r\n              let timeleng=dayarr.length * 3.5;\r\n              let time=9+((dayarr[0]-2)*3.5);\r\n\r\n                makingTable.push({x:day,y:time,ycolor:timeleng,color:\"red\",text:arr[i].classname});\r\n            \r\n            }\r\n\r\n\r\n        }\r\n        \r\n        setmakingdrawList(makingTable);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onCalculate=()=>{\r\n        \r\n        const root= composeTree('type1',Maintable);\r\n        \r\n         \r\n         let maxScoreTable=[];\r\n         let maxTable=[];\r\n     \r\n         for(let i=0;i<root.finalTable.length;i++){\r\n     \r\n             let n=root.finalTable[i];\r\n     \r\n            if(n.score===root.maxScore){\r\n     \r\n             maxScoreTable.push(n);\r\n     \r\n     \r\n            }    \r\n     \r\n     \r\n            if(n.deep===root.max){\r\n     \r\n             maxTable.push(n);\r\n            }\r\n     \r\n         }\r\n         console.log('&&&&&&&&&&&&&&&학점 우선 시간표&&&&&&&&&&&&&&');\r\n         for(let i=0;i<maxScoreTable.length;i++){\r\n     \r\n             let n=maxScoreTable[i];\r\n             let k=n.deep;\r\n             console.log('--------%d번째 시간표----------',i+1);\r\n             for(let j=0;j<k;j++){\r\n     \r\n                 console.log('%d:%s %s %d ',j+1,n.data.classname,n.data.profess,n.data.classscore);\r\n     \r\n                 n=n.adault;\r\n             }\r\n     \r\n             console.log('[총 %d학점]',root.maxScore);\r\n             console.log('---------------------------');\r\n     \r\n         }\r\n     \r\n     \r\n         console.log('&&&&&&&&&&&&&&&과목개수 우선 시간표&&&&&&&&&&&&&&');\r\n     \r\n        for(let i=0;i<maxTable.length;i++)\r\n        {\r\n            let n=maxTable[i];\r\n            let a=n.score;\r\n            console.log('--------%d번째 시간표----------',i+1);\r\n             for(let j=0;j<root.max;j++)\r\n             {   \r\n                \r\n                 console.log('%d:%s %s %d',j+1 ,n.data.classname,n.data.profess,n.data.classscore);\r\n                 n=n.adault;\r\n     \r\n             }\r\n             console.log('[총%d학점]',a);\r\n             console.log('---------------------------');\r\n        }\r\n        \r\n        let a=maxTable[0];\r\n        let bb=[];\r\n        for(let i=0;i<root.max;i++){\r\n\r\n            bb.push(a.data);\r\n            a=a.adault;\r\n\r\n\r\n        }\r\n        makingDrawList(bb);\r\n\r\n\r\n     };\r\n\r\n     \r\n\r\n\r\n    return (\r\n        <Graph onCalculate={onCalculate}\r\n            TdrawList={TdrawList}\r\n            Delete={Delete}\r\n            makingdrawList={makingdrawList}\r\n            >\r\n\r\n            </Graph>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default GraphContainer;"]},"metadata":{},"sourceType":"module"}