{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\containers\\\\write\\\\WriteContainer.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport WriteSchedule from '../../component/write/WriteSchedule';\nimport { register } from '../../modules/write';\nimport Node, { lookschedule, insertTable, composeTree, search } from '../../lib/tree/tree';\n\nconst WriteContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    type1,\n    type2,\n    type3\n  } = useSelector(({\n    write\n  }) => ({\n    type1: write.type1,\n    type2: write.type2,\n    type3: write.type3\n  })); // write 가 관리하고 있는 상태를 불러와서 write에 저장\n\n  const table = {};\n\n  const tableUpdate = table => {\n    table.type1 = type1;\n    table.type2 = type2;\n    table.type3 = type3;\n  }; // 1번 순회함.\n  //type1이 변경되면 onCalculate 함수를 실행 \n\n\n  useEffect(() => {\n    tableUpdate(table);\n    console.log(table);\n  }, [type1, type2, type3, dispatch]); // useEffect(()=>{history.push('/graph')},[onCalculate]);\n\n  const onCalculate = () => {\n    const root = composeTree('type1', table); //먼저 type1 로 root 만들고\n    //학점이 남으면 type2로 root만듬\n    //그래도 학점이 남으면 type3으로 root 만듬.\n\n    let maxScoreTable = [];\n    let maxTable = [];\n\n    for (let i = 0; i < root.finalTable.length; i++) {\n      let n = root.finalTable[i];\n\n      if (n.score === root.maxScore) {\n        maxScoreTable.push(n);\n      }\n\n      if (n.deep === root.max) {\n        maxTable.push(n);\n      }\n    }\n\n    console.log('&&&&&&&&&&&&&&&학점 우선 시간표&&&&&&&&&&&&&&');\n\n    for (let i = 0; i < maxScoreTable.length; i++) {\n      let n = maxScoreTable[i];\n      let k = n.deep;\n      console.log('--------%d번째 시간표----------', i + 1);\n\n      for (let j = 0; j < k; j++) {\n        console.log('%d:%s %s %d ', j + 1, n.data.classname, n.data.profess, n.data.classscore);\n        n = n.adault;\n      }\n\n      console.log('[총 %d학점]', root.maxScore);\n      console.log('---------------------------');\n    }\n\n    console.log('&&&&&&&&&&&&&&&과목개수 우선 시간표&&&&&&&&&&&&&&');\n\n    for (let i = 0; i < maxTable.length; i++) {\n      let n = maxTable[i];\n      let a = n.score;\n      console.log('--------%d번째 시간표----------', i + 1);\n\n      for (let j = 0; j < root.max; j++) {\n        console.log('%d:%s %s %d', j + 1, n.data.classname, n.data.profess, n.data.classscore);\n        n = n.adault;\n      }\n\n      console.log('[총%d학점]', a);\n      console.log('---------------------------');\n    }\n  };\n\n  const onFinal = ({\n    imp,\n    classname,\n    classtime,\n    profess,\n    classscore\n  }) => {\n    let type;\n    if (imp === '1') type = 'type1';else if (imp === '2') type = 'type2';else if (imp === '3') type = 'type3';\n    dispatch(register({\n      form: type,\n      value: {\n        classname,\n        classtime,\n        profess,\n        classscore\n      }\n    }));\n  };\n\n  return React.createElement(WriteSchedule, {\n    onFinal: onFinal,\n    onCalculate: onCalculate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(WriteContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/containers/write/WriteContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","useDispatch","withRouter","WriteSchedule","register","Node","lookschedule","insertTable","composeTree","search","WriteContainer","history","dispatch","type1","type2","type3","write","table","tableUpdate","console","log","onCalculate","root","maxScoreTable","maxTable","i","finalTable","length","n","score","maxScore","push","deep","max","k","j","data","classname","profess","classscore","adault","a","onFinal","imp","classtime","type","form","value"],"mappings":"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","sourcesContent":["\r\n\r\nimport React , {useState,useCallback,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport WriteSchedule from '../../component/write/WriteSchedule';\r\n\r\nimport {register} from '../../modules/write';\r\n\r\nimport Node ,{lookschedule,insertTable,composeTree ,search} from '../../lib/tree/tree';\r\n\r\n\r\n\r\nconst WriteContainer=({history})=>{\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const {type1,type2,type3}=useSelector(({write})=>({\r\n\r\n        type1:write.type1,\r\n        type2:write.type2,\r\n        type3:write.type3,\r\n     }\r\n     ));  // write 가 관리하고 있는 상태를 불러와서 write에 저장\r\n\r\n\r\n\r\n     const table={};\r\n     \r\n     const tableUpdate=(table)=>\r\n         {\r\n         table.type1=type1;\r\n         table.type2=type2;\r\n         table.type3=type3;\r\n         }\r\n     ;\r\n\r\n\r\n     \r\n// 1번 순회함.\r\n\r\n\r\n//type1이 변경되면 onCalculate 함수를 실행 \r\n\r\nuseEffect(()=>{tableUpdate(table); console.log(table);} ,[type1,type2,type3,dispatch]);\r\n\r\n// useEffect(()=>{history.push('/graph')},[onCalculate]);\r\n\r\nconst onCalculate=()=>{\r\n\r\n   const root= composeTree('type1',table);\r\n   \r\n    //먼저 type1 로 root 만들고\r\n    //학점이 남으면 type2로 root만듬\r\n    //그래도 학점이 남으면 type3으로 root 만듬.\r\n    \r\n    let maxScoreTable=[];\r\n    let maxTable=[];\r\n\r\n    for(let i=0;i<root.finalTable.length;i++){\r\n\r\n        let n=root.finalTable[i];\r\n\r\n       if(n.score===root.maxScore){\r\n\r\n        maxScoreTable.push(n);\r\n\r\n\r\n       }    \r\n\r\n\r\n       if(n.deep===root.max){\r\n\r\n        maxTable.push(n);\r\n       }\r\n\r\n    }\r\n    console.log('&&&&&&&&&&&&&&&학점 우선 시간표&&&&&&&&&&&&&&');\r\n    for(let i=0;i<maxScoreTable.length;i++){\r\n\r\n        let n=maxScoreTable[i];\r\n        let k=n.deep;\r\n        console.log('--------%d번째 시간표----------',i+1);\r\n        for(let j=0;j<k;j++){\r\n\r\n            console.log('%d:%s %s %d ',j+1,n.data.classname,n.data.profess,n.data.classscore);\r\n\r\n            n=n.adault;\r\n        }\r\n\r\n        console.log('[총 %d학점]',root.maxScore);\r\n        console.log('---------------------------');\r\n\r\n    }\r\n\r\n\r\n    console.log('&&&&&&&&&&&&&&&과목개수 우선 시간표&&&&&&&&&&&&&&');\r\n\r\n   for(let i=0;i<maxTable.length;i++)\r\n   {\r\n       let n=maxTable[i];\r\n       let a=n.score;\r\n       console.log('--------%d번째 시간표----------',i+1);\r\n        for(let j=0;j<root.max;j++)\r\n        {   \r\n           \r\n            console.log('%d:%s %s %d',j+1 ,n.data.classname,n.data.profess,n.data.classscore);\r\n            n=n.adault;\r\n\r\n        }\r\n        console.log('[총%d학점]',a);\r\n        console.log('---------------------------');\r\n   }\r\n\r\n  \r\n\r\n\r\n};\r\n\r\nconst onFinal=({imp,classname,classtime,profess,classscore})=>{\r\n\r\n        let type;\r\n\r\n        if(imp==='1')\r\n            type='type1';\r\n        else if(imp==='2')\r\n            type='type2';\r\n        else if(imp==='3')\r\n            type='type3';\r\n\r\n       \r\n        \r\n        dispatch(\r\n            register({\r\n                form:type,\r\n                value:{\r\n                  classname,\r\n                  classtime,\r\n                  profess,\r\n                  classscore,\r\n                 }\r\n                \r\n            })\r\n        );\r\n        \r\n      \r\n    \r\n    };\r\n\r\n\r\n\r\n\r\n     return (\r\n\r\n        <WriteSchedule \r\n        \r\n        onFinal={onFinal}\r\n    onCalculate={onCalculate}\r\n        />\r\n\r\n     );\r\n\r\n};\r\n\r\n\r\n\r\nexport default withRouter(WriteContainer);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}