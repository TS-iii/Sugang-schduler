{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\containers\\\\write\\\\WriteContainer.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport WriteSchedule from '../../component/write/WriteSchedule';\nimport { register } from '../../modules/write';\n\nclass Node {\n  constructor(data) {\n    this.data = data;\n    this.children = [];\n    this.adault = null;\n  }\n\n  insert(data) {\n    const node = new Node(data);\n    node.adault = this;\n    this.children.push(node);\n    node.num = this.children.length - 1;\n  }\n\n} //둘의 시간이 겹치는지 확인\n//안겹치면 true 반환\n\n\nconst lookschedule = function (a, b) {\n  if (a.t1.length) {\n    if (b.t1.length) {\n      for (let i = 0; i < a.t1.length; i++) {\n        if (b.t1.indexOf(a.t1[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t2.length) {\n    if (b.t2.length) {\n      for (let i = 0; i < a.t2.length; i++) {\n        if (b.t2.indexOf(a.t2[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t3.length) {\n    if (b.t3.length) {\n      for (let i = 0; i < a.t3.length; i++) {\n        if (b.t3.indexOf(a.t3[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t4.length) {\n    if (b.t4.length) {\n      for (let i = 0; i < a.t4.length; i++) {\n        if (b.t4.indexOf(a.t4[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t5.length) {\n    if (b.t5.length) {\n      for (let i = 0; i < a.t5.length; i++) {\n        if (b.t5.indexOf(a.t5[i]) !== -1) return false;\n      }\n    }\n  }\n\n  return true;\n}; // 안겹친다는 가정이 필요\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\n\n\nconst insertTable = function (dst, src) {\n  for (let i = 0; i < src.keyword.length; i++) {\n    dst[src.keyword[i]] = dst[src.keyword[i]].concat(src[src.keyword[i]]);\n  }\n\n  ;\n};\n\nconst WriteContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    type1,\n    type2,\n    type3\n  } = useSelector(({\n    write\n  }) => ({\n    type1: write.type1,\n    type2: write.type2,\n    type3: write.type3\n  })); // write 가 관리하고 있는 상태를 불러와서 write에 저장\n\n  let max = 0;\n  let finalTable = []; // 1번 순회함.\n\n  const composeTree = function () {\n    const root = new Node(); //루트 바로 밑 1번째 자식들 구성\n\n    for (let i = 0; i < type1.length; i++) {\n      let node = new Node(type1[i]);\n      root.insert(node);\n    }\n\n    for (let i = 0; i < type1.length; i++) {\n      search(root.children[i], 1);\n    }\n\n    return root;\n  };\n\n  const search = function (n, k) {\n    let num = 0;\n\n    for (let i = n.num + 1; i < n.adault.children.length; i++) {\n      if (lookschedule(n.classtime, n.adault.children[i].classtime)) {\n        n.insert(n.adault.children[i]);\n        num++;\n      }\n    }\n\n    ;\n\n    if (num === 0) //지금 이 노드가 leaf라는 소리\n      {\n        if (max < k) {\n          max = k;\n          finalTable = [];\n          finalTable.push(n);\n        } else if (max === k) {\n          finalTable.push(n);\n        }\n\n        return;\n      } else {\n      for (let i = 0; i < num; i++) {\n        search(n.children[i], k + 1);\n      }\n    }\n  };\n\n  const onCalculate = () => {\n    console.log('xx');\n    console.log(\"length: %d\", type1.length); //    composeTree();\n    //    let n=finalTable[0];\n    //    for(let i=0;i<max;i++){\n    //    console.log('%s ', n.classname);\n    //       n=n.adault;\n    //    }\n  };\n\n  const onFinal = ({\n    imp,\n    classname,\n    classtime,\n    profess,\n    classscore\n  }) => {\n    let type;\n    if (imp === '1') type = 'type1';else if (imp === '2') type = 'type2';else if (imp === '3') type = 'type3';\n    dispatch(register({\n      form: type,\n      value: {\n        classname,\n        classtime,\n        profess,\n        classscore\n      }\n    }));\n  };\n\n  return React.createElement(WriteSchedule, {\n    onFinal: onFinal,\n    onCalculate: onCalculate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  });\n};\n\nexport default WriteContainer; //시간표 변환\n// const classTimeMod=function(c){\n// let schedule={\n//     t1:[],\n//     t2:[],\n//     t3:[],\n//     t4:[],\n//     t5:[]\n// };\n// let n=-1;\n// let t=null;\n// for(let i=0;i<c.length;i++){\n//     if(n===3)       \n//         {\n//             n=2;\n//             continue;\n//         }\n//     if(n===2)\n//         {\n//             n=-1;\n//             continue;\n//         }\n//     if(c[i]===' ')\n//         continue;\n//     switch(c[i]){\n//         case '월':\n//             t='t1';\n//             break;\n//         case '화':\n//             t='t2';\n//             break;\n//         case '수':\n//             t='t3';\n//             break;\n//         case '목':\n//             t='t4';\n//             break;\n//         case '금':\n//             t='t5';\n//             break;    \n//         default:\n//             break;\n//     }\n//     if(c[i]>='A' && c[i]<='J')\n//         {   let b=c[i]-'A';\n//             b=(b+1)*3;\n//             schedule[t].push(b-1);\n//             schedule[t].push(b);\n//             schedule[t].push(b+1);\n//             continue;\n//         }\n//     else if(c[i]>='1' && c[i]<='9')\n//         {   \n//             if(c[i+1]>='0' && c[i+1]<='9')\n//                 {\n//                     n=1;\n//                     continue;\n//                 }\n//             else if(n===1)\n//                 {\n//                     let b=20+(c[i]-'0');\n//                     n=-1;\n//                     if(c[i+1]==='.')\n//                         {\n//                             n=3;\n//                             schedule[t].push(b+1);\n//                         }\n//                     else\n//                         schedule[t].push(b);\n//                 }\n//             else {\n//                 if(c[i+1]==='.')\n//                     {  n=3;\n//                         schedule[t].push((c[i]-'0')+1);\n//                         }\n//                 else\n//                     schedule[t].push(c[i]-'0');\n//             }\n//         }\n// }//for문 끝\n// return schedule;\n// };","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/containers/write/WriteContainer.js"],"names":["React","useState","useCallback","useSelector","useDispatch","withRouter","WriteSchedule","register","Node","constructor","data","children","adault","insert","node","push","num","length","lookschedule","a","b","t1","i","indexOf","t2","t3","t4","t5","insertTable","dst","src","keyword","concat","WriteContainer","history","dispatch","type1","type2","type3","write","max","finalTable","composeTree","root","search","n","k","classtime","onCalculate","console","log","onFinal","imp","classname","profess","classscore","type","form","value"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;;AAIA,MAAMC,IAAN,CAAW;AAEPC,EAAAA,WAAW,CAACC,IAAD,EAAM;AAEb,SAAKA,IAAL,GAAUA,IAAV;AACA,SAAKC,QAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAY,IAAZ;AAEH;;AAGFC,EAAAA,MAAM,CAACH,IAAD,EAAM;AAEX,UAAMI,IAAI,GAAC,IAAIN,IAAJ,CAASE,IAAT,CAAX;AACAI,IAAAA,IAAI,CAACF,MAAL,GAAY,IAAZ;AAEA,SAAKD,QAAL,CAAcI,IAAd,CAAmBD,IAAnB;AACAA,IAAAA,IAAI,CAACE,GAAL,GAAS,KAAKL,QAAL,CAAcM,MAAd,GAAqB,CAA9B;AAEA;;AAnBO,C,CA2BX;AACA;;;AACA,MAAMC,YAAY,GAAE,UAASC,CAAT,EAAWC,CAAX,EAAa;AAEzB,MAAGD,CAAC,CAACE,EAAF,CAAKJ,MAAR,EACI;AACI,QAAGG,CAAC,CAACC,EAAF,CAAKJ,MAAR,EACA;AACI,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACE,EAAF,CAAKJ,MAAnB,EAA0BK,CAAC,EAA3B,EAA8B;AAE1B,YAAGF,CAAC,CAACC,EAAF,CAAKE,OAAL,CAAaJ,CAAC,CAACE,EAAF,CAAKC,CAAL,CAAb,MAAwB,CAAC,CAA5B,EACI,OAAO,KAAP;AAEP;AAEJ;AAEJ;;AAEL,MAAGH,CAAC,CAACK,EAAF,CAAKP,MAAR,EACA;AACI,QAAGG,CAAC,CAACI,EAAF,CAAKP,MAAR,EACA;AACI,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACK,EAAF,CAAKP,MAAnB,EAA0BK,CAAC,EAA3B,EAA8B;AAE1B,YAAGF,CAAC,CAACI,EAAF,CAAKD,OAAL,CAAaJ,CAAC,CAACK,EAAF,CAAKF,CAAL,CAAb,MAAwB,CAAC,CAA5B,EACI,OAAO,KAAP;AAEP;AAEJ;AAEJ;;AAED,MAAGH,CAAC,CAACM,EAAF,CAAKR,MAAR,EACA;AACI,QAAGG,CAAC,CAACK,EAAF,CAAKR,MAAR,EACA;AACI,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACM,EAAF,CAAKR,MAAnB,EAA0BK,CAAC,EAA3B,EAA8B;AAE1B,YAAGF,CAAC,CAACK,EAAF,CAAKF,OAAL,CAAaJ,CAAC,CAACM,EAAF,CAAKH,CAAL,CAAb,MAAwB,CAAC,CAA5B,EACI,OAAO,KAAP;AAEP;AAEJ;AAEJ;;AAED,MAAGH,CAAC,CAACO,EAAF,CAAKT,MAAR,EACA;AACI,QAAGG,CAAC,CAACM,EAAF,CAAKT,MAAR,EACA;AACI,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACO,EAAF,CAAKT,MAAnB,EAA0BK,CAAC,EAA3B,EAA8B;AAE1B,YAAGF,CAAC,CAACM,EAAF,CAAKH,OAAL,CAAaJ,CAAC,CAACO,EAAF,CAAKJ,CAAL,CAAb,MAAwB,CAAC,CAA5B,EACI,OAAO,KAAP;AAEP;AAEJ;AAEJ;;AAED,MAAGH,CAAC,CAACQ,EAAF,CAAKV,MAAR,EACA;AACI,QAAGG,CAAC,CAACO,EAAF,CAAKV,MAAR,EACA;AACI,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,CAAC,CAACQ,EAAF,CAAKV,MAAnB,EAA0BK,CAAC,EAA3B,EAA8B;AAE1B,YAAGF,CAAC,CAACO,EAAF,CAAKJ,OAAL,CAAaJ,CAAC,CAACQ,EAAF,CAAKL,CAAL,CAAb,MAAwB,CAAC,CAA5B,EACI,OAAO,KAAP;AAEP;AAEJ;AAEJ;;AAGD,SAAO,IAAP;AAIP,CAlFD,C,CAoFA;AACA;AACA;;;AACA,MAAMM,WAAW,GAAC,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAG/B,OAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACQ,GAAG,CAACC,OAAJ,CAAYd,MAA1B,EAAiCK,CAAC,EAAlC,EAAqC;AAEjCO,IAAAA,GAAG,CAACC,GAAG,CAACC,OAAJ,CAAYT,CAAZ,CAAD,CAAH,GAAoBO,GAAG,CAACC,GAAG,CAACC,OAAJ,CAAYT,CAAZ,CAAD,CAAH,CAAoBU,MAApB,CAA2BF,GAAG,CAACA,GAAG,CAACC,OAAJ,CAAYT,CAAZ,CAAD,CAA9B,CAApB;AAEH;;AAAA;AAGJ,CAVD;;AAcA,MAAMW,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE7B,QAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AAEA,QAAM;AAACgC,IAAAA,KAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA;AAAb,MAAoBnC,WAAW,CAAC,CAAC;AAACoC,IAAAA;AAAD,GAAD,MAAY;AAE/CH,IAAAA,KAAK,EAACG,KAAK,CAACH,KAFmC;AAG/CC,IAAAA,KAAK,EAACE,KAAK,CAACF,KAHmC;AAI/CC,IAAAA,KAAK,EAACC,KAAK,CAACD;AAJmC,GAAZ,CAAD,CAArC,CAJ6B,CAUxB;;AAEL,MAAIE,GAAG,GAAC,CAAR;AACA,MAAIC,UAAU,GAAC,EAAf,CAb6B,CAelC;;AACA,QAAMC,WAAW,GAAC,YAAU;AAGxB,UAAMC,IAAI,GAAE,IAAInC,IAAJ,EAAZ,CAHwB,CAKxB;;AACA,SAAI,IAAIc,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,KAAK,CAACnB,MAApB,EAA2BK,CAAC,EAA5B,EAA+B;AAE3B,UAAIR,IAAI,GAAE,IAAIN,IAAJ,CAAS4B,KAAK,CAACd,CAAD,CAAd,CAAV;AAEAqB,MAAAA,IAAI,CAAC9B,MAAL,CAAYC,IAAZ;AAEH;;AAID,SAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACc,KAAK,CAACnB,MAApB,EAA2BK,CAAC,EAA5B,EAA+B;AAE3BsB,MAAAA,MAAM,CAACD,IAAI,CAAChC,QAAL,CAAcW,CAAd,CAAD,EAAkB,CAAlB,CAAN;AAEH;;AAIL,WAAOqB,IAAP;AAEC,GA1BD;;AA4BA,QAAMC,MAAM,GAAC,UAASC,CAAT,EAAWC,CAAX,EAAa;AAGtB,QAAI9B,GAAG,GAAC,CAAR;;AAEA,SAAI,IAAIM,CAAC,GAACuB,CAAC,CAAC7B,GAAF,GAAM,CAAhB,EAAkBM,CAAC,GAACuB,CAAC,CAACjC,MAAF,CAASD,QAAT,CAAkBM,MAAtC,EAA6CK,CAAC,EAA9C,EAAiD;AAEzC,UAAGJ,YAAY,CAAC2B,CAAC,CAACE,SAAH,EAAaF,CAAC,CAACjC,MAAF,CAASD,QAAT,CAAkBW,CAAlB,EAAqByB,SAAlC,CAAf,EACI;AACIF,QAAAA,CAAC,CAAChC,MAAF,CAASgC,CAAC,CAACjC,MAAF,CAASD,QAAT,CAAkBW,CAAlB,CAAT;AACAN,QAAAA,GAAG;AACN;AAEZ;;AAAA;;AAID,QAAGA,GAAG,KAAG,CAAT,EAAiB;AACb;AACI,YAAGwB,GAAG,GAACM,CAAP,EACA;AACIN,UAAAA,GAAG,GAACM,CAAJ;AAEAL,UAAAA,UAAU,GAAC,EAAX;AACAA,UAAAA,UAAU,CAAC1B,IAAX,CAAgB8B,CAAhB;AAEH,SAPD,MASK,IAAIL,GAAG,KAAGM,CAAV,EACL;AACQL,UAAAA,UAAU,CAAC1B,IAAX,CAAgB8B,CAAhB;AACP;;AACD;AACH,OAhBL,MAiBK;AAED,WAAI,IAAIvB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,GAAd,EAAkBM,CAAC,EAAnB,EACA;AACIsB,QAAAA,MAAM,CAACC,CAAC,CAAClC,QAAF,CAAWW,CAAX,CAAD,EAAewB,CAAC,GAAC,CAAjB,CAAN;AAEH;AAEJ;AAEJ,GA5CD;;AAgDA,QAAME,WAAW,GAAC,MAAI;AAGlBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBd,KAAK,CAACnB,MAA/B,EALkB,CAOtB;AAEA;AAEA;AACA;AACA;AAEA;AAGC,GAlBD;;AAoBA,QAAMkC,OAAO,GAAC,CAAC;AAACC,IAAAA,GAAD;AAAKC,IAAAA,SAAL;AAAeN,IAAAA,SAAf;AAAyBO,IAAAA,OAAzB;AAAiCC,IAAAA;AAAjC,GAAD,KAAgD;AAEtD,QAAIC,IAAJ;AAEA,QAAGJ,GAAG,KAAG,GAAT,EACII,IAAI,GAAC,OAAL,CADJ,KAEK,IAAGJ,GAAG,KAAG,GAAT,EACDI,IAAI,GAAC,OAAL,CADC,KAEA,IAAGJ,GAAG,KAAG,GAAT,EACDI,IAAI,GAAC,OAAL;AAIJrB,IAAAA,QAAQ,CACJ5B,QAAQ,CAAC;AACLkD,MAAAA,IAAI,EAACD,IADA;AAELE,MAAAA,KAAK,EAAC;AACJL,QAAAA,SADI;AAEJN,QAAAA,SAFI;AAGJO,QAAAA,OAHI;AAIJC,QAAAA;AAJI;AAFD,KAAD,CADJ,CAAR;AAeH,GA5BL;;AAiCK,SAEG,oBAAC,aAAD;AAEA,IAAA,OAAO,EAAEJ,OAFT;AAGA,IAAA,WAAW,EAAEH,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH;AAUJ,CA3JD;;AA+JA,eAAef,cAAf,C,CAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAGA;AAEA","sourcesContent":["\r\n\r\nimport React , {useState,useCallback} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport WriteSchedule from '../../component/write/WriteSchedule';\r\n\r\nimport {register} from '../../modules/write';\r\n\r\n\r\n\r\nclass Node {\r\n\r\n    constructor(data){\r\n\r\n        this.data=data;\r\n        this.children=[];\r\n        this.adault=null;\r\n    \r\n    }\r\n\r\n\r\n   insert(data){\r\n\r\n    const node=new Node(data);\r\n    node.adault=this;\r\n  \r\n    this.children.push(node);\r\n    node.num=this.children.length-1;\r\n\r\n   }\r\n   \r\n\r\n\r\n}\r\n\r\n\r\n\r\n//둘의 시간이 겹치는지 확인\r\n//안겹치면 true 반환\r\nconst lookschedule= function(a,b){\r\n\r\n        if(a.t1.length)\r\n            {   \r\n                if(b.t1.length)\r\n                {\r\n                    for(let i=0;i<a.t1.length;i++){\r\n                        \r\n                        if(b.t1.indexOf(a.t1[i])!==-1)\r\n                            return false;\r\n                            \r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n    \r\n        if(a.t2.length)\r\n        {   \r\n            if(b.t2.length)\r\n            {\r\n                for(let i=0;i<a.t2.length;i++){\r\n                    \r\n                    if(b.t2.indexOf(a.t2[i])!==-1)\r\n                        return false;\r\n                        \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if(a.t3.length)\r\n        {   \r\n            if(b.t3.length)\r\n            {\r\n                for(let i=0;i<a.t3.length;i++){\r\n                    \r\n                    if(b.t3.indexOf(a.t3[i])!==-1)\r\n                        return false;\r\n                        \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if(a.t4.length)\r\n        {   \r\n            if(b.t4.length)\r\n            {\r\n                for(let i=0;i<a.t4.length;i++){\r\n                    \r\n                    if(b.t4.indexOf(a.t4[i])!==-1)\r\n                        return false;\r\n                        \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if(a.t5.length)\r\n        {   \r\n            if(b.t5.length)\r\n            {\r\n                for(let i=0;i<a.t5.length;i++){\r\n                    \r\n                    if(b.t5.indexOf(a.t5[i])!==-1)\r\n                        return false;\r\n                        \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    \r\n\r\n\r\n};\r\n\r\n// 안겹친다는 가정이 필요\r\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \r\n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\r\nconst insertTable=function(dst,src){\r\n\r\n    \r\n    for(let i=0;i<src.keyword.length;i++){\r\n\r\n        dst[src.keyword[i]]=dst[src.keyword[i]].concat(src[src.keyword[i]]);\r\n        \r\n    };\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst WriteContainer=({history})=>{\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const {type1,type2,type3}=useSelector(({write})=>({\r\n\r\n        type1:write.type1,\r\n        type2:write.type2,\r\n        type3:write.type3,\r\n     }\r\n     ));  // write 가 관리하고 있는 상태를 불러와서 write에 저장\r\n\r\n     let max=0;\r\n     let finalTable=[];\r\n\r\n// 1번 순회함.\r\nconst composeTree=function(){\r\n\r\n  \r\n    const root= new Node();\r\n    \r\n    //루트 바로 밑 1번째 자식들 구성\r\n    for(let i=0;i<type1.length;i++){\r\n\r\n        let node= new Node(type1[i]);\r\n\r\n        root.insert(node);\r\n\r\n    }\r\n\r\n\r\n\r\n    for(let i=0;i<type1.length;i++){\r\n\r\n        search(root.children[i],1);\r\n        \r\n    }\r\n\r\n    \r\n\r\nreturn root;\r\n\r\n};\r\n\r\nconst search=function(n,k){\r\n\r\n    \r\n    let num=0;\r\n\r\n    for(let i=n.num+1;i<n.adault.children.length;i++){\r\n\r\n            if(lookschedule(n.classtime,n.adault.children[i].classtime))\r\n                {\r\n                    n.insert(n.adault.children[i]);\r\n                    num++;\r\n                }\r\n\r\n    };\r\n\r\n\r\n\r\n    if(num===0)      //지금 이 노드가 leaf라는 소리\r\n        {   \r\n            if(max<k)\r\n            {\r\n                max=k;\r\n                \r\n                finalTable=[];\r\n                finalTable.push(n);\r\n\r\n            }\r\n\r\n            else if (max===k)\r\n            {\r\n                    finalTable.push(n);\r\n            }\r\n            return;\r\n        }\r\n    else {\r\n\r\n        for(let i=0;i<num;i++)\r\n        {\r\n            search(n.children[i],k+1);\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nconst onCalculate=()=>{\r\n\r\n\r\n    console.log('xx');\r\n\r\n    console.log(\"length: %d\",type1.length);\r\n\r\n//    composeTree();\r\n   \r\n//    let n=finalTable[0];\r\n\r\n//    for(let i=0;i<max;i++){\r\n//    console.log('%s ', n.classname);\r\n//       n=n.adault;\r\n\r\n//    }\r\n\r\n\r\n};\r\n\r\nconst onFinal=({imp,classname,classtime,profess,classscore})=>{\r\n\r\n        let type;\r\n\r\n        if(imp==='1')\r\n            type='type1';\r\n        else if(imp==='2')\r\n            type='type2';\r\n        else if(imp==='3')\r\n            type='type3';\r\n\r\n       \r\n        \r\n        dispatch(\r\n            register({\r\n                form:type,\r\n                value:{\r\n                  classname,\r\n                  classtime,\r\n                  profess,\r\n                  classscore,\r\n                 }\r\n                \r\n            })\r\n        );\r\n        \r\n      \r\n    \r\n    };\r\n\r\n\r\n\r\n\r\n     return (\r\n\r\n        <WriteSchedule \r\n        \r\n        onFinal={onFinal}\r\n        onCalculate={onCalculate}\r\n        />\r\n\r\n     );\r\n\r\n};\r\n\r\n\r\n\r\nexport default WriteContainer;\r\n\r\n\r\n\r\n\r\n//시간표 변환\r\n// const classTimeMod=function(c){\r\n\r\n// let schedule={\r\n\r\n//     t1:[],\r\n//     t2:[],\r\n//     t3:[],\r\n//     t4:[],\r\n//     t5:[]\r\n\r\n// };\r\n\r\n// let n=-1;\r\n// let t=null;\r\n\r\n// for(let i=0;i<c.length;i++){\r\n   \r\n//     if(n===3)       \r\n//         {\r\n//             n=2;\r\n//             continue;\r\n//         }\r\n    \r\n//     if(n===2)\r\n//         {\r\n//             n=-1;\r\n//             continue;\r\n//         }\r\n\r\n//     if(c[i]===' ')\r\n//         continue;\r\n\r\n//     switch(c[i]){\r\n\r\n//         case '월':\r\n//             t='t1';\r\n//             break;\r\n//         case '화':\r\n//             t='t2';\r\n//             break;\r\n//         case '수':\r\n//             t='t3';\r\n//             break;\r\n//         case '목':\r\n//             t='t4';\r\n//             break;\r\n//         case '금':\r\n//             t='t5';\r\n//             break;    \r\n        \r\n//         default:\r\n//             break;\r\n    \r\n//     }\r\n\r\n//     if(c[i]>='A' && c[i]<='J')\r\n//         {   let b=c[i]-'A';\r\n//             b=(b+1)*3;\r\n\r\n//             schedule[t].push(b-1);\r\n//             schedule[t].push(b);\r\n//             schedule[t].push(b+1);\r\n\r\n//             continue;\r\n//         }\r\n\r\n//     else if(c[i]>='1' && c[i]<='9')\r\n//         {   \r\n            \r\n//             if(c[i+1]>='0' && c[i+1]<='9')\r\n//                 {\r\n//                     n=1;\r\n//                     continue;\r\n//                 }\r\n//             else if(n===1)\r\n//                 {\r\n//                     let b=20+(c[i]-'0');\r\n//                     n=-1;\r\n\r\n//                     if(c[i+1]==='.')\r\n//                         {\r\n//                             n=3;\r\n//                             schedule[t].push(b+1);\r\n//                         }\r\n//                     else\r\n//                         schedule[t].push(b);\r\n                \r\n//                 }\r\n\r\n//             else {\r\n\r\n//                 if(c[i+1]==='.')\r\n//                     {  n=3;\r\n//                         schedule[t].push((c[i]-'0')+1);\r\n//                         }\r\n//                 else\r\n//                     schedule[t].push(c[i]-'0');\r\n//             }\r\n\r\n//         }\r\n\r\n    \r\n    \r\n\r\n\r\n// }//for문 끝\r\n\r\n\r\n// return schedule;\r\n\r\n// };"]},"metadata":{},"sourceType":"module"}