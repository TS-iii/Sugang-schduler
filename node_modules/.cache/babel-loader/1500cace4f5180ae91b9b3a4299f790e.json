{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\containers\\\\write\\\\WriteContainer.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport WriteSchedule from '../../component/write/WriteSchedule';\nimport { register } from '../../modules/write';\nimport Node, { lookschedule, insertTable, composeTree, search } from '../../lib/tree/tree';\n\nconst WriteContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    type1,\n    type2,\n    type3\n  } = useSelector(({\n    write\n  }) => ({\n    type1: write.type1,\n    type2: write.type2,\n    type3: write.type3\n  })); // write 가 관리하고 있는 상태를 불러와서 write에 저장\n  // 1번 순회함.\n  //type1이 변경되면 onCalculate 함수를 실행 \n  // useEffect(()=>{history.push('/graph')},[onCalculate]);\n\n  const onCalculate = () => {\n    history.push('/graph');\n  };\n\n  const onFinal = ({\n    type,\n    classname,\n    classtime,\n    profess,\n    classscore,\n    id\n  }) => {\n    dispatch(register({\n      form: type,\n      value: {\n        type,\n        classname,\n        classtime,\n        profess,\n        classscore,\n        id\n      }\n    }));\n  };\n\n  return React.createElement(WriteSchedule, {\n    onFinal: onFinal,\n    onCalculate: onCalculate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(WriteContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/containers/write/WriteContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","useDispatch","withRouter","WriteSchedule","register","Node","lookschedule","insertTable","composeTree","search","WriteContainer","history","dispatch","type1","type2","type3","write","onCalculate","push","onFinal","type","classname","classtime","profess","classscore","id","form","value"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,WAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,OAAOC,IAAP,IAAcC,YAAd,EAA2BC,WAA3B,EAAuCC,WAAvC,EAAoDC,MAApD,QAAiE,qBAAjE;;AAIA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE7B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM;AAACY,IAAAA,KAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA;AAAb,MAAoBf,WAAW,CAAC,CAAC;AAACgB,IAAAA;AAAD,GAAD,MAAY;AAE/CH,IAAAA,KAAK,EAACG,KAAK,CAACH,KAFmC;AAG/CC,IAAAA,KAAK,EAACE,KAAK,CAACF,KAHmC;AAI/CC,IAAAA,KAAK,EAACC,KAAK,CAACD;AAJmC,GAAZ,CAAD,CAArC,CAJ6B,CAUxB;AAGV;AAGA;AAKA;;AAEA,QAAME,WAAW,GAAC,MAAI;AAItBN,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AAIC,GARD;;AAUA,QAAMC,OAAO,GAAC,CAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,SAAN;AAAgBC,IAAAA,SAAhB;AAA0BC,IAAAA,OAA1B;AAAkCC,IAAAA,UAAlC;AAA6CC,IAAAA;AAA7C,GAAD,KAAoD;AAI1Db,IAAAA,QAAQ,CACJR,QAAQ,CAAC;AACLsB,MAAAA,IAAI,EAACN,IADA;AAELO,MAAAA,KAAK,EAAC;AACJP,QAAAA,IADI;AAEJC,QAAAA,SAFI;AAGJC,QAAAA,SAHI;AAIJC,QAAAA,OAJI;AAKJC,QAAAA,UALI;AAMJC,QAAAA;AANI;AAFD,KAAD,CADJ,CAAR;AAiBH,GArBL;;AA0BK,SAEG,oBAAC,aAAD;AAEA,IAAA,OAAO,EAAEN,OAFT;AAGJ,IAAA,WAAW,EAAEF,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH;AAUJ,CArED;;AAyEA,eAAef,UAAU,CAACQ,cAAD,CAAzB","sourcesContent":["\r\n\r\nimport React , {useState,useCallback,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport WriteSchedule from '../../component/write/WriteSchedule';\r\n\r\nimport {register} from '../../modules/write';\r\n\r\nimport Node ,{lookschedule,insertTable,composeTree ,search} from '../../lib/tree/tree';\r\n\r\n\r\n\r\nconst WriteContainer=({history})=>{\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const {type1,type2,type3}=useSelector(({write})=>({\r\n\r\n        type1:write.type1,\r\n        type2:write.type2,\r\n        type3:write.type3,\r\n     }\r\n     ));  // write 가 관리하고 있는 상태를 불러와서 write에 저장\r\n\r\n\r\n// 1번 순회함.\r\n\r\n\r\n//type1이 변경되면 onCalculate 함수를 실행 \r\n\r\n\r\n\r\n\r\n// useEffect(()=>{history.push('/graph')},[onCalculate]);\r\n\r\nconst onCalculate=()=>{\r\n    \r\n\r\n\r\nhistory.push('/graph');\r\n\r\n\r\n\r\n};\r\n\r\nconst onFinal=({type,classname,classtime,profess,classscore,id})=>{\r\n\r\n        \r\n\r\n        dispatch(\r\n            register({\r\n                form:type,\r\n                value:{\r\n                  type,\r\n                  classname,\r\n                  classtime,\r\n                  profess,\r\n                  classscore,\r\n                  id,\r\n                 }\r\n                \r\n            })\r\n        );\r\n        \r\n      \r\n    \r\n    };\r\n\r\n\r\n\r\n\r\n     return (\r\n\r\n        <WriteSchedule \r\n        \r\n        onFinal={onFinal}\r\n    onCalculate={onCalculate}\r\n       />\r\n\r\n     );\r\n\r\n};\r\n\r\n\r\n\r\nexport default withRouter(WriteContainer);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}