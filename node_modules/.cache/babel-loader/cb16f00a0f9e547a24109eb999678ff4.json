{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\containers\\\\write\\\\WriteContainer.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport WriteSchedule from '../../component/write/WriteSchedule';\nimport { register } from '../../modules/write'; // const [scheduleTable,setScheduleTable]=useState({\n//     t1:[],\n//     t2:[],\n//     t3:[],\n//     t4:[],\n//     t5:[]\n// });\n\nclass Node {\n  constructor(data) {\n    this.data = data;\n    this.children = [];\n    this.adault = null;\n  }\n\n  insert(data) {\n    const node = new Node(data);\n    node.adault = this;\n    this.children.push(node);\n  }\n\n} //둘의 시간이 겹치는지 확인\n\n\nconst lookschedule = function (a, b) {};\n\nconst WriteContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const write = useSelector(state => state.write, []); // write 가 관리하고 있는 상태를 불러와서 write에 저장\n\n  const onFinal = ({\n    imp,\n    classname,\n    classtime,\n    profess,\n    classscore\n  }) => {\n    let type;\n    if (imp === '1') type = 'type1';else if (imp === '2') type = 'type2';else if (imp === '3') type = 'type3';\n    dispatch(register({\n      form: type,\n      value: {\n        classname,\n        classtime,\n        profess,\n        classscore\n      }\n    }));\n  };\n\n  return React.createElement(WriteSchedule, {\n    onFinal: onFinal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  });\n};\n\nexport default WriteContainer; //시간표 변환\n// const classTimeMod=function(c){\n// let schedule={\n//     t1:[],\n//     t2:[],\n//     t3:[],\n//     t4:[],\n//     t5:[]\n// };\n// let n=-1;\n// let t=null;\n// for(let i=0;i<c.length;i++){\n//     if(n===3)       \n//         {\n//             n=2;\n//             continue;\n//         }\n//     if(n===2)\n//         {\n//             n=-1;\n//             continue;\n//         }\n//     if(c[i]===' ')\n//         continue;\n//     switch(c[i]){\n//         case '월':\n//             t='t1';\n//             break;\n//         case '화':\n//             t='t2';\n//             break;\n//         case '수':\n//             t='t3';\n//             break;\n//         case '목':\n//             t='t4';\n//             break;\n//         case '금':\n//             t='t5';\n//             break;    \n//         default:\n//             break;\n//     }\n//     if(c[i]>='A' && c[i]<='J')\n//         {   let b=c[i]-'A';\n//             b=(b+1)*3;\n//             schedule[t].push(b-1);\n//             schedule[t].push(b);\n//             schedule[t].push(b+1);\n//             continue;\n//         }\n//     else if(c[i]>='1' && c[i]<='9')\n//         {   \n//             if(c[i+1]>='0' && c[i+1]<='9')\n//                 {\n//                     n=1;\n//                     continue;\n//                 }\n//             else if(n===1)\n//                 {\n//                     let b=20+(c[i]-'0');\n//                     n=-1;\n//                     if(c[i+1]==='.')\n//                         {\n//                             n=3;\n//                             schedule[t].push(b+1);\n//                         }\n//                     else\n//                         schedule[t].push(b);\n//                 }\n//             else {\n//                 if(c[i+1]==='.')\n//                     {  n=3;\n//                         schedule[t].push((c[i]-'0')+1);\n//                         }\n//                 else\n//                     schedule[t].push(c[i]-'0');\n//             }\n//         }\n// }//for문 끝\n// return schedule;\n// };","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/containers/write/WriteContainer.js"],"names":["React","useState","useSelector","useDispatch","withRouter","WriteSchedule","register","Node","constructor","data","children","adault","insert","node","push","lookschedule","a","b","WriteContainer","history","dispatch","write","state","onFinal","imp","classname","classtime","profess","classscore","type","form","value"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,SAAQC,QAAR,QAAuB,qBAAvB,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAGA,MAAMC,IAAN,CAAW;AAEPC,EAAAA,WAAW,CAACC,IAAD,EAAM;AAEb,SAAKA,IAAL,GAAUA,IAAV;AACA,SAAKC,QAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAY,IAAZ;AACH;;AAGFC,EAAAA,MAAM,CAACH,IAAD,EAAM;AAEX,UAAMI,IAAI,GAAC,IAAIN,IAAJ,CAASE,IAAT,CAAX;AACAI,IAAAA,IAAI,CAACF,MAAL,GAAY,IAAZ;AAEA,SAAKD,QAAL,CAAcI,IAAd,CAAmBD,IAAnB;AAEA;;AAjBO,C,CA0BX;;;AACA,MAAME,YAAY,GAAE,UAASC,CAAT,EAAWC,CAAX,EAAa,CAMhC,CAND;;AAUA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE7B,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAMkB,KAAK,GAACnB,WAAW,CAACoB,KAAK,IAE1BA,KAAK,CAACD,KAFc,EAIrB,EAJqB,CAAvB,CAJ6B,CAQrB;;AAIb,QAAME,OAAO,GAAC,CAAC;AAACC,IAAAA,GAAD;AAAKC,IAAAA,SAAL;AAAeC,IAAAA,SAAf;AAAyBC,IAAAA,OAAzB;AAAiCC,IAAAA;AAAjC,GAAD,KAAgD;AAEtD,QAAIC,IAAJ;AAEA,QAAGL,GAAG,KAAG,GAAT,EACIK,IAAI,GAAC,OAAL,CADJ,KAEK,IAAGL,GAAG,KAAG,GAAT,EACDK,IAAI,GAAC,OAAL,CADC,KAEA,IAAGL,GAAG,KAAG,GAAT,EACDK,IAAI,GAAC,OAAL;AAGJT,IAAAA,QAAQ,CACJd,QAAQ,CAAC;AACLwB,MAAAA,IAAI,EAACD,IADA;AAELE,MAAAA,KAAK,EAAC;AACJN,QAAAA,SADI;AAEJC,QAAAA,SAFI;AAGJC,QAAAA,OAHI;AAIJC,QAAAA;AAJI;AAFD,KAAD,CADJ,CAAR;AAcH,GA1BL;;AA+BK,SAEG,oBAAC,aAAD;AAEA,IAAA,OAAO,EAAEL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH;AAUJ,CArDD;;AAyDA,eAAeL,cAAf,C,CAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAGA;AAEA","sourcesContent":["\r\n\r\nimport React , {useState} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport WriteSchedule from '../../component/write/WriteSchedule';\r\n\r\nimport {register} from '../../modules/write';\r\n\r\n\r\n\r\n\r\n// const [scheduleTable,setScheduleTable]=useState({\r\n\r\n//     t1:[],\r\n//     t2:[],\r\n//     t3:[],\r\n//     t4:[],\r\n//     t5:[]\r\n\r\n\r\n// });\r\n\r\n\r\nclass Node {\r\n\r\n    constructor(data){\r\n\r\n        this.data=data;\r\n        this.children=[];\r\n        this.adault=null;\r\n    }\r\n\r\n\r\n   insert(data){\r\n\r\n    const node=new Node(data);\r\n    node.adault=this;\r\n\r\n    this.children.push(node);\r\n\r\n   }\r\n   \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//둘의 시간이 겹치는지 확인\r\nconst lookschedule= function(a,b){\r\n\r\n\r\n    \r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst WriteContainer=({history})=>{\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const write=useSelector(state=>(\r\n\r\n        state.write\r\n        \r\n     ),[]);  // write 가 관리하고 있는 상태를 불러와서 write에 저장\r\n\r\n     \r\n\r\nconst onFinal=({imp,classname,classtime,profess,classscore})=>{\r\n\r\n        let type;\r\n\r\n        if(imp==='1')\r\n            type='type1';\r\n        else if(imp==='2')\r\n            type='type2';\r\n        else if(imp==='3')\r\n            type='type3';\r\n\r\n        \r\n        dispatch(\r\n            register({\r\n                form:type,\r\n                value:{\r\n                  classname,\r\n                  classtime,\r\n                  profess,\r\n                  classscore,\r\n                 }\r\n                \r\n            })\r\n        );\r\n        \r\n    \r\n    };\r\n\r\n\r\n\r\n\r\n     return (\r\n\r\n        <WriteSchedule \r\n        \r\n        onFinal={onFinal}\r\n\r\n        />\r\n\r\n     );\r\n\r\n};\r\n\r\n\r\n\r\nexport default WriteContainer;\r\n\r\n\r\n\r\n\r\n//시간표 변환\r\n// const classTimeMod=function(c){\r\n\r\n// let schedule={\r\n\r\n//     t1:[],\r\n//     t2:[],\r\n//     t3:[],\r\n//     t4:[],\r\n//     t5:[]\r\n\r\n// };\r\n\r\n// let n=-1;\r\n// let t=null;\r\n\r\n// for(let i=0;i<c.length;i++){\r\n   \r\n//     if(n===3)       \r\n//         {\r\n//             n=2;\r\n//             continue;\r\n//         }\r\n    \r\n//     if(n===2)\r\n//         {\r\n//             n=-1;\r\n//             continue;\r\n//         }\r\n\r\n//     if(c[i]===' ')\r\n//         continue;\r\n\r\n//     switch(c[i]){\r\n\r\n//         case '월':\r\n//             t='t1';\r\n//             break;\r\n//         case '화':\r\n//             t='t2';\r\n//             break;\r\n//         case '수':\r\n//             t='t3';\r\n//             break;\r\n//         case '목':\r\n//             t='t4';\r\n//             break;\r\n//         case '금':\r\n//             t='t5';\r\n//             break;    \r\n        \r\n//         default:\r\n//             break;\r\n    \r\n//     }\r\n\r\n//     if(c[i]>='A' && c[i]<='J')\r\n//         {   let b=c[i]-'A';\r\n//             b=(b+1)*3;\r\n\r\n//             schedule[t].push(b-1);\r\n//             schedule[t].push(b);\r\n//             schedule[t].push(b+1);\r\n\r\n//             continue;\r\n//         }\r\n\r\n//     else if(c[i]>='1' && c[i]<='9')\r\n//         {   \r\n            \r\n//             if(c[i+1]>='0' && c[i+1]<='9')\r\n//                 {\r\n//                     n=1;\r\n//                     continue;\r\n//                 }\r\n//             else if(n===1)\r\n//                 {\r\n//                     let b=20+(c[i]-'0');\r\n//                     n=-1;\r\n\r\n//                     if(c[i+1]==='.')\r\n//                         {\r\n//                             n=3;\r\n//                             schedule[t].push(b+1);\r\n//                         }\r\n//                     else\r\n//                         schedule[t].push(b);\r\n                \r\n//                 }\r\n\r\n//             else {\r\n\r\n//                 if(c[i+1]==='.')\r\n//                     {  n=3;\r\n//                         schedule[t].push((c[i]-'0')+1);\r\n//                         }\r\n//                 else\r\n//                     schedule[t].push(c[i]-'0');\r\n//             }\r\n\r\n//         }\r\n\r\n    \r\n    \r\n\r\n\r\n// }//for문 끝\r\n\r\n\r\n// return schedule;\r\n\r\n// };"]},"metadata":{},"sourceType":"module"}