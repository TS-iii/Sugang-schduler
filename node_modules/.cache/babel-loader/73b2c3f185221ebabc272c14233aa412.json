{"ast":null,"code":"export class Node {\n  constructor(data) {\n    this.data = data;\n    this.children = [];\n    this.adault = null;\n  }\n\n  insert(data) {\n    const node = new Node(data);\n    node.adault = this;\n    this.children.push(node);\n    node.num = this.children.length - 1;\n  }\n\n} //둘의 시간이 겹치는지 확인\n//안겹치면 true 반환\n\nexport const lookschedule = function (a, b) {\n  if (a.t1.length) {\n    if (b.t1.length) {\n      for (let i = 0; i < a.t1.length; i++) {\n        if (b.t1.indexOf(a.t1[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t2.length) {\n    if (b.t2.length) {\n      for (let i = 0; i < a.t2.length; i++) {\n        if (b.t2.indexOf(a.t2[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t3.length) {\n    if (b.t3.length) {\n      for (let i = 0; i < a.t3.length; i++) {\n        if (b.t3.indexOf(a.t3[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t4.length) {\n    if (b.t4.length) {\n      for (let i = 0; i < a.t4.length; i++) {\n        if (b.t4.indexOf(a.t4[i]) !== -1) return false;\n      }\n    }\n  }\n\n  if (a.t5.length) {\n    if (b.t5.length) {\n      for (let i = 0; i < a.t5.length; i++) {\n        if (b.t5.indexOf(a.t5[i]) !== -1) return false;\n      }\n    }\n  }\n\n  return true;\n}; // 안겹친다는 가정이 필요\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\n\nexport const insertTable = function (dst, src) {\n  for (let i = 0; i < src.keyword.length; i++) {\n    dst[src.keyword[i]] = dst[src.keyword[i]].concat(src[src.keyword[i]]);\n  }\n\n  ;\n};\nexport default Node;","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/lib/tree/tree.js"],"names":["Node","constructor","data","children","adault","insert","node","push","num","length","lookschedule","a","b","t1","i","indexOf","t2","t3","t4","t5","insertTable","dst","src","keyword","concat"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nexport class Node {\r\n\r\n    constructor(data){\r\n\r\n        this.data=data;\r\n        this.children=[];\r\n        this.adault=null;\r\n    \r\n    }\r\n\r\n\r\n   insert(data){\r\n\r\n    const node=new Node(data);\r\n    node.adault=this;\r\n  \r\n    this.children.push(node);\r\n    node.num=this.children.length-1;\r\n\r\n   }\r\n   \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//둘의 시간이 겹치는지 확인\r\n//안겹치면 true 반환\r\nexport const lookschedule= function(a,b){\r\n\r\n    if(a.t1.length)\r\n        {   \r\n            if(b.t1.length)\r\n            {\r\n                for(let i=0;i<a.t1.length;i++){\r\n                    \r\n                    if(b.t1.indexOf(a.t1[i])!==-1)\r\n                        return false;\r\n                        \r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    if(a.t2.length)\r\n    {   \r\n        if(b.t2.length)\r\n        {\r\n            for(let i=0;i<a.t2.length;i++){\r\n                \r\n                if(b.t2.indexOf(a.t2[i])!==-1)\r\n                    return false;\r\n                    \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if(a.t3.length)\r\n    {   \r\n        if(b.t3.length)\r\n        {\r\n            for(let i=0;i<a.t3.length;i++){\r\n                \r\n                if(b.t3.indexOf(a.t3[i])!==-1)\r\n                    return false;\r\n                    \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if(a.t4.length)\r\n    {   \r\n        if(b.t4.length)\r\n        {\r\n            for(let i=0;i<a.t4.length;i++){\r\n                \r\n                if(b.t4.indexOf(a.t4[i])!==-1)\r\n                    return false;\r\n                    \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if(a.t5.length)\r\n    {   \r\n        if(b.t5.length)\r\n        {\r\n            for(let i=0;i<a.t5.length;i++){\r\n                \r\n                if(b.t5.indexOf(a.t5[i])!==-1)\r\n                    return false;\r\n                    \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return true;\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\n// 안겹친다는 가정이 필요\r\n// 안겹치고 이 함수를 사용하면 dst 시간표에 src가 추가됨. \r\n// 시간표와, 시간표에 넣을 과목을 dst, src 차례로 주면됨\r\nexport const insertTable=function(dst,src){\r\n\r\n    \r\n    for(let i=0;i<src.keyword.length;i++){\r\n\r\n        dst[src.keyword[i]]=dst[src.keyword[i]].concat(src[src.keyword[i]]);\r\n        \r\n    };\r\n\r\n\r\n};\r\n\r\nexport default Node;"]},"metadata":{},"sourceType":"module"}