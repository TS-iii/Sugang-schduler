{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ReactProject\\\\sugang-scheduler\\\\sugang-frontend\\\\src\\\\component\\\\write\\\\WriteSchedule.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\nconst BackTemplate = styled.div`\n\nposition:absolute;\nleft:0;\nright:0;\ntop:0;\nbottom:0;\n\nbackground:${palette.gray[2]};\npadding-left:10px;\npadding-right:10px;\n\n\n\n\n`;\nconst ContentBody = styled.div`\n  \nheight:100%;\nborder-top:2rem;\n\ndisplay:flex;\nflex-direction:row;\nflex-wrap:nowrap; // 한줄에 표사\njustify-content:flex-start;\n\n\n\n`;\nconst WriteList = styled.div`\n\n.explain {\n\n    color:green;\n    \n\n}\n\nwidth:50%;\nborder-right:1px solid black;\n\ndisplay:flex;\nflex-direction:column;\n align-items:center;\n justify-content:center;\n\n`;\nconst WriteBox = styled.form`\n\n\ndisplay:flex;\n\ninput,button{\n\n    border:none;\n    outline:none;\n}\n\ninput {\n    flex:1;\n    height:50px;\n    width:400px;\n\n    font-size:1.5rem;\n    \n    \n\n}\n\nbutton{\n    cursor:pointer;\n    background:${palette.gray[9]};\n    color:white;\n    font-weight:bold;\n    height:50px;\n    width:100px;\n    font-size:1.5rem;\n\n\n}\n\n`;\nconst ListTemplate = styled.div`\n\nwidth:50%;\n\n\n\n h2 {\n   \n    text-align:center;\n\n    padding-top:1rem;\n\n }\n\nbutton{\n\n    width:100%;\n    height:50px;\n    color:red;\n    font-weight:bold;\n    background:${palette.gray[9]};\n    cursor:pointer;\n\n}\n\n\n\n\n`;\nconst DataBlock = styled.div`\n\n\nheight:80%;\n\nbackground:white;\n\n\n`;\nconst DataList = React.memo(({\n  dataes,\n  onRemove\n}) => React.createElement(DataBlock, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}, dataes.map(data => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, React.createElement(DataItem, {\n  key: data,\n  data: data,\n  onRemove: onRemove,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}), \" \")))));\nconst DataItemBlock = styled.div`\n\n\ndisplay:flex;\n\nbutton,Data{\nborder:none;\noutline:none\n}\n\n\n\nbutton{\n    width:100px;\n    cursor:pointer;\n    font-weight:bold;\n    color:white;\n    background:${palette.gray[9]};\n    \n}\n\n`;\nconst DataItem = React.memo(({\n  data,\n  onRemove\n}) => React.createElement(DataItemBlock, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}, React.createElement(Data, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}, data), React.createElement(\"button\", {\n  onClick: () => onRemove(data),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}, \"\\uC0AD\\uC81C\")));\nconst Data = styled.div`\n\n\n\n`;\n\nconst WriteSchedule = ({\n  onFinal,\n  onCalculate\n}) => {\n  const [localData, setLocalData] = useState([]);\n  const [input, setInput] = useState('');\n  const insertData = useCallback(data => {\n    setLocalData([...localData, data]);\n  }, [localData]);\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    insertData(input.trim()); // 앞뒤 공백 없앤후 등록\n\n    setInput('');\n  }, [input, insertData]);\n  const onRemove = useCallback(data => {\n    setLocalData(localData.filter(d => d !== data));\n  }, [localData]);\n\n  const onResult = () => {\n    // localData 는 문자열 저장된 배열\n    // let table={type1:[],type2:[],type3:[]};\n    let id = 0; //학점은 1에서 6까지 있는걸로\n\n    localData.forEach(e => {\n      //중요도/과목명/시간/교수이름/학점\n      let splitData = e.split('/');\n      let imp = splitData[0].trim(); //중요도\n\n      let classname = splitData[1].trim(); // 과목명  \n\n      let classtime = splitData[2].trim(); //시간\n\n      let profess = splitData[3].trim(); // 교수이름\n\n      let classscore = splitData[4].trim() * 1; //학점 , 숫자로 형변환\n      // let totalInfo={\n      //     imp,classname,classtime,profess,classscore\n      // }\n\n      let schedule = {\n        keyword: [],\n        t1: [],\n        t2: [],\n        t3: [],\n        t4: [],\n        t5: []\n      };\n      let n = -1;\n      let t = null;\n\n      for (let i = 0; i < classtime.length; i++) {\n        if (n === 3) {\n          n = 2;\n          continue;\n        }\n\n        if (n === 2) {\n          n = -1;\n          continue;\n        }\n\n        if (classtime[i] === ' ') continue;\n\n        switch (classtime[i]) {\n          case '월':\n            t = 't1';\n            schedule.keyword.push(t);\n            break;\n\n          case '화':\n            t = 't2';\n            schedule.keyword.push(t);\n            break;\n\n          case '수':\n            t = 't3';\n            schedule.keyword.push(t);\n            break;\n\n          case '목':\n            t = 't4';\n            schedule.keyword.push(t);\n            break;\n\n          case '금':\n            t = 't5';\n            schedule.keyword.push(t);\n            break;\n\n          default:\n            break;\n        }\n\n        if (classtime[i] >= 'A' && classtime[i] <= 'J') {\n          let b = classtime[i].charCodeAt(0) - 65;\n          b = (b + 1) * 3;\n          schedule[t].push(b - 1);\n          schedule[t].push(b);\n          schedule[t].push(b + 1);\n          continue;\n        } else if (classtime[i] >= '1' && classtime[i] <= '9') {\n          if (classtime[i + 1] >= '0' && classtime[i + 1] <= '9') {\n            n = 1;\n            continue;\n          } else if (n === 1) {\n            let b = 20 + (classtime[i] - '0');\n            n = -1;\n\n            if (classtime[i + 1] === '.') {\n              n = 3;\n              schedule[t].push(b + 1);\n            } else schedule[t].push(b);\n          } else {\n            if (classtime[i + 1] === '.') {\n              n = 3;\n              schedule[t].push((classtime[i] - '0') * 2 + 1);\n            } else schedule[t].push((classtime[i] - '0') * 2);\n          }\n        }\n      } //for문 끝  (시간표를 변환해주는 로직)\n\n\n      classtime = schedule;\n      let type;\n      if (imp === '1') type = 'type1';else if (imp === '2') type = 'type2';else if (imp === '3') type = 'type3';\n      onFinal({\n        type,\n        classname,\n        classtime,\n        profess,\n        classscore,\n        id\n      });\n      id++; // table[type].push({classname,classtime,profess,classscore});\n    }); // 현재 LocalData에 있는 원소 각각에 대해 이 함수 실행 \n\n    onCalculate(); // onCalculate(); // 상태값을 읽어들임 \n    // return <Graph props={localData} />\n  }; // onresult 끝\n\n\n  return React.createElement(BackTemplate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(ContentBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(WriteList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"explain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, \"-------------------------------------\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }), \"1/\\uC804\\uC790\\uC7A5\\uB860/\\uC6D4A \\uC218A/\\uBC15\\uC6A9\\uBC30/3\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }), \"1/\\uC54C\\uACE0\\uB9AC\\uC998/\\uD654E \\uAE08E/\\uC704\\uADDC\\uBC94/ 3\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }), \"1/\\uC54C\\uACE0\\uB9AC\\uC998/\\uC6D4D \\uBAA9D/\\uC704\\uADDC\\uBC94/ 3\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }), \"1/\\uC624\\uD508\\uC18C\\uC2A4SW\\uC785\\uBB38/\\uAE08 5.5 6.5 7.5 /\\uC548\\uBCD1\\uD5CC/ 3\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }), \"1 /\\uB3C4\\uBA54\\uC778\\uBD84\\uC11D \\uBC0F sw\\uC124\\uACC4 / \\uC6D4B \\uBAA9B/ \\uC774\\uC815\\uD0DC / 4\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }), \"1 /\\uB3C4\\uBA54\\uC778\\uBD84\\uC11D \\uBC0F sw\\uC124\\uACC4 / \\uC6D4D \\uBAA9D/\\uC774\\uC815\\uD0DC/  4\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }), \"1 /\\uCC3D\\uC758\\uC18C\\uD504\\uD2B8\\uC6E8\\uC5B4\\uC785\\uBB38 /\\uC6D4B \\uBAA9B/\\uC774\\uD658\\uC6A9/  1\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }), \"-------------------------------------\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), \"\\uC911\\uC694\\uB3C4/\\uACFC\\uBAA9\\uBA85/\\uC2DC\\uAC04/\\uAD50\\uC218\\uC774\\uB984/\\uD559\\uC810 \\uC73C\\uB85C \\uC785\\uB825 \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }), \"**************************************************************\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }), \"\\uC911\\uC694\\uB3C4: 1,2,3 \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }), \"[1: \\uAF2D \\uC218\\uAC15\\uC2E0\\uCCAD \\uD574\\uC57C\\uD568]  [2: 1\\uBCF4\\uB2E8 \\uB35C\\uD568]  [3: 2\\uBCF4\\uB2E8 \\uB35C\\uD568] \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }), \"************************************************************* \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }), \"ex) \\uC911\\uC694\\uB3C4 1, \\uACFC\\uBAA9\\uBA85:\\uC804\\uC790\\uD68C\\uB85C \\uC2DC\\uAC04:\\uC6D4A \\uC218A \\uAD50\\uC218\\uC774\\uB984: \\uD64D\\uAE38\\uB3D9 \\uD559\\uC810:3\\uD559\\uC810 \\uC774\\uBA74 \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }), \"1/\\uC804\\uC790\\uD68C\\uB85C/\\uC6D4A \\uC218A / \\uD64D\\uAE38\\uB3D9/3   \\uC785\\uB825 \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  })), React.createElement(WriteBox, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"\\uC911\\uC694\\uB3C4/\\uACFC\\uBAA9\\uBA85/\\uC2DC\\uAC04/\\uAD50\\uC218\\uC774\\uB984/\\uD559\\uC810\",\n    onChange: onChange,\n    value: input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D \"))), React.createElement(ListTemplate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uC2E0\\uCCAD \\uB9AC\\uC2A4\\uD2B8\"), React.createElement(DataList, {\n    dataes: localData,\n    onRemove: onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }, \"\\uACB0\\uACFC \\uBCF4\\uAE30\"))));\n};\n\nexport default WriteSchedule;\n/*\r\n\r\n분석해야되는 데이터\r\n[객체1,객체2,...]\r\n\r\n양식\r\n{\r\n과목이름:\r\n교수이름:\r\n\r\n중요도:\r\n학점:String\r\n시간:\r\n\r\n}\r\n\r\n데이터 전처리-해야하는일\r\n\r\n1. 중요도로 데이터를 나눔\r\n중요도1 : [,,,]\r\n중요도2: [,,,]\r\n중요도3 : [,,,]\r\n\r\n2.같은 중요도에서 동일 과목 확인(시간은 다른데 과목은 동일)\r\n(링크드리스트형태로 표현?)\r\n\r\n\r\n시간표 객체\r\n{\r\n\r\n신청된 총 학점수:\r\n현재 시간표에 들어있는 과목 객체 배열: [객체1,]    \r\n월:[boolean,],\r\n화:[],\r\n수:[],\r\n목:[],\r\n금:[],\r\n\r\n}\r\n\r\n\r\n\r\n--------------------------------------------\r\n요일 요소 안에 배열은 크기가 30   \r\n첫번째 0은 '2'를 뜻하고\r\n마지막 29는 '30'을 뜻함   \r\n\r\n월 A 라면 시간표->월->0,1,2 번 인덱스 비었는지 확인\r\n월 1.5,2,2.5라면 2를 곱해서 3,4,5로 만든다음 -2를 해서  1,2,3 번 인덱스가 비었는지 확인\r\n(비었으면 false, 찼으면 true)\r\n\r\n\r\n\r\n---------------------------------------\r\n배열에 객체를 저장\r\n\r\n// 시간표 비교해서 true,false 반환\r\nexport compare = function(a){  \r\n\r\n\r\n    \r\n\r\n\r\n} ;\r\n\r\n\r\n// 목록에 시간표 추가함  \r\n \r\n\r\n//시간표 삭제\r\n\r\nexport delete = function(a){\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n-----------------------------------\r\n\r\n        \r\n    const onResult=()=>{\r\n\r\n        // localData 는 문자열 저장된 배열\r\n        \r\n        //학점은 1에서 6까지 있는걸로\r\n\r\n        let splitData=localData.split('/'); \r\n        //중요도/과목명/시간/교수이름/학점\r\n                \r\n        let imp=splitData[0].trim(); // 1~3 앞뒤 공백 제거\r\n        let classname=splitData[1].trim();\r\n\r\n        let classtime=splitData[2].trim();\r\n        \r\n\r\n        let profess=splitData[3].trim();\r\n        let classScore=splitData[4].trim(); // 1~6학점\r\n        \r\n              \r\n            return <Graph props={localData} />\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/user/Desktop/ReactProject/sugang-scheduler/sugang-frontend/src/component/write/WriteSchedule.js"],"names":["React","useState","useCallback","useEffect","styled","palette","Link","BackTemplate","div","gray","ContentBody","WriteList","WriteBox","form","ListTemplate","DataBlock","DataList","memo","dataes","onRemove","map","data","DataItemBlock","DataItem","Data","WriteSchedule","onFinal","onCalculate","localData","setLocalData","input","setInput","insertData","onChange","e","target","value","onSubmit","preventDefault","trim","filter","d","onResult","id","forEach","splitData","split","imp","classname","classtime","profess","classscore","schedule","keyword","t1","t2","t3","t4","t5","n","t","i","length","push","b","charCodeAt","type"],"mappings":"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","sourcesContent":["import React ,{useState,useCallback, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst BackTemplate= styled.div`\r\n\r\nposition:absolute;\r\nleft:0;\r\nright:0;\r\ntop:0;\r\nbottom:0;\r\n\r\nbackground:${palette.gray[2]};\r\npadding-left:10px;\r\npadding-right:10px;\r\n\r\n\r\n\r\n\r\n`;\r\n\r\n\r\nconst ContentBody=styled.div`\r\n  \r\nheight:100%;\r\nborder-top:2rem;\r\n\r\ndisplay:flex;\r\nflex-direction:row;\r\nflex-wrap:nowrap; // 한줄에 표사\r\njustify-content:flex-start;\r\n\r\n\r\n\r\n`;\r\n\r\n\r\nconst WriteList=styled.div`\r\n\r\n.explain {\r\n\r\n    color:green;\r\n    \r\n\r\n}\r\n\r\nwidth:50%;\r\nborder-right:1px solid black;\r\n\r\ndisplay:flex;\r\nflex-direction:column;\r\n align-items:center;\r\n justify-content:center;\r\n\r\n`;\r\n\r\n\r\nconst WriteBox=styled.form`\r\n\r\n\r\ndisplay:flex;\r\n\r\ninput,button{\r\n\r\n    border:none;\r\n    outline:none;\r\n}\r\n\r\ninput {\r\n    flex:1;\r\n    height:50px;\r\n    width:400px;\r\n\r\n    font-size:1.5rem;\r\n    \r\n    \r\n\r\n}\r\n\r\nbutton{\r\n    cursor:pointer;\r\n    background:${palette.gray[9]};\r\n    color:white;\r\n    font-weight:bold;\r\n    height:50px;\r\n    width:100px;\r\n    font-size:1.5rem;\r\n\r\n\r\n}\r\n\r\n`;\r\n\r\n\r\nconst ListTemplate=styled.div`\r\n\r\nwidth:50%;\r\n\r\n\r\n\r\n h2 {\r\n   \r\n    text-align:center;\r\n\r\n    padding-top:1rem;\r\n\r\n }\r\n\r\nbutton{\r\n\r\n    width:100%;\r\n    height:50px;\r\n    color:red;\r\n    font-weight:bold;\r\n    background:${palette.gray[9]};\r\n    cursor:pointer;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n`;\r\n\r\nconst DataBlock=styled.div`\r\n\r\n\r\nheight:80%;\r\n\r\nbackground:white;\r\n\r\n\r\n`;\r\n\r\nconst DataList=React.memo(({dataes,onRemove})=>(\r\n\r\n    <DataBlock>\r\n    \r\n    \r\n{     \r\n    <ul>\r\n    {\r\n     dataes.map(data=>(\r\n    <li><DataItem key={data} data={data} onRemove={onRemove}   /> </li>\r\n    ))\r\n    }\r\n\r\n    </ul> \r\n\r\n}\r\n  \r\n \r\n    </DataBlock>\r\n\r\n   \r\n\r\n));\r\n\r\nconst DataItemBlock=styled.div`\r\n\r\n\r\ndisplay:flex;\r\n\r\nbutton,Data{\r\nborder:none;\r\noutline:none\r\n}\r\n\r\n\r\n\r\nbutton{\r\n    width:100px;\r\n    cursor:pointer;\r\n    font-weight:bold;\r\n    color:white;\r\n    background:${palette.gray[9]};\r\n    \r\n}\r\n\r\n`;\r\n\r\nconst DataItem=React.memo(({data,onRemove})=>(\r\n\r\n    <DataItemBlock>\r\n    <Data >{data}</Data>\r\n    <button onClick={()=>onRemove(data)}>삭제</button>\r\n    </DataItemBlock>\r\n\r\n));\r\n\r\nconst Data=styled.div`\r\n\r\n\r\n\r\n`;\r\n\r\nconst WriteSchedule=({onFinal,onCalculate})=>{\r\n    \r\n    const [localData,setLocalData] = useState([]);\r\n    const [input,setInput]=useState('');\r\n\r\n    const insertData=useCallback(data=>{\r\n\r\n       setLocalData([...localData,data]);\r\n\r\n    },[localData]);\r\n\r\n\r\n    const onChange=useCallback(e=>{\r\n\r\n        setInput(e.target.value);\r\n\r\n    },[]);\r\n    \r\n\r\n    const onSubmit=useCallback(e=>{\r\n\r\n        e.preventDefault();\r\n        insertData(input.trim());   // 앞뒤 공백 없앤후 등록\r\n        setInput('');\r\n\r\n    },[input,insertData]);\r\n\r\n\r\n    const onRemove=useCallback(\r\n        data=>{\r\n            setLocalData(localData.filter(d=>d!==data));  \r\n        },[localData,]);\r\n\r\n\r\n    const onResult=()=>{\r\n\r\n            // localData 는 문자열 저장된 배열\r\n            // let table={type1:[],type2:[],type3:[]};\r\n\r\n            \r\n            let id=0;\r\n          \r\n        \r\n       \r\n            //학점은 1에서 6까지 있는걸로\r\n            localData.forEach(e=>{\r\n\r\n                  //중요도/과목명/시간/교수이름/학점\r\n                let splitData=e.split('/');\r\n                let imp=splitData[0].trim();    //중요도\r\n                let classname=splitData[1].trim();  // 과목명  \r\n                let classtime=splitData[2].trim();  //시간\r\n                let profess=splitData[3].trim();    // 교수이름\r\n                let classscore=(splitData[4].trim())*1; //학점 , 숫자로 형변환\r\n\r\n                // let totalInfo={\r\n                //     imp,classname,classtime,profess,classscore\r\n                // }\r\n                \r\n                                    let schedule={\r\n\r\n                                        keyword:[],\r\n                                        t1:[],\r\n                                        t2:[],\r\n                                        t3:[],\r\n                                        t4:[],\r\n                                        t5:[]\r\n\r\n                                    };\r\n\r\n                                    let n=-1;\r\n                                    let t=null;\r\n\r\n                        for(let i=0;i<classtime.length;i++){\r\n                                    \r\n                                        if(n===3)       \r\n                                            {\r\n                                                n=2;\r\n                                                continue;\r\n                                            }\r\n                                        \r\n                                        if(n===2)\r\n                                            {\r\n                                                n=-1;\r\n                                                continue;\r\n                                            }\r\n\r\n                                        if(classtime[i]===' ')\r\n                                            continue;\r\n\r\n                                        switch(classtime[i]){\r\n\r\n                                            case '월':\r\n                                                t='t1';\r\n                                                schedule.keyword.push(t);\r\n                                                break;\r\n                                            case '화':\r\n                                                t='t2';\r\n                                                schedule.keyword.push(t);\r\n                                                break;\r\n                                            case '수':\r\n                                                t='t3';\r\n                                                schedule.keyword.push(t);\r\n                                                break;\r\n                                            case '목':\r\n                                                t='t4';\r\n                                                schedule.keyword.push(t);\r\n                                                break;\r\n                                            case '금':\r\n                                                t='t5';\r\n                                                schedule.keyword.push(t);\r\n                                                break;    \r\n                                            \r\n                                            default:\r\n                                                break;\r\n                                        \r\n                                        }\r\n\r\n                                        if(classtime[i]>='A' && classtime[i]<='J')\r\n                                            {   let b=classtime[i].charCodeAt(0)-65;\r\n                                                b=(b+1)*3;\r\n\r\n                                                schedule[t].push(b-1);\r\n                                                schedule[t].push(b);\r\n                                                schedule[t].push(b+1);\r\n\r\n                                                continue;\r\n                                            }\r\n\r\n                                        else if(classtime[i]>='1' && classtime[i]<='9')\r\n                                            {   \r\n                                                \r\n                                                if(classtime[i+1]>='0' && classtime[i+1]<='9')\r\n                                                    {\r\n                                                        n=1;\r\n                                                        continue;\r\n                                                    }\r\n                                                else if(n===1)\r\n                                                    {\r\n                                                        let b=20+(classtime[i]-'0');\r\n                                                        n=-1;\r\n\r\n                                                        if(classtime[i+1]==='.')\r\n                                                            {\r\n                                                                n=3;\r\n                                                                schedule[t].push(b+1);\r\n                                                            }\r\n                                                        else\r\n                                                            schedule[t].push(b);\r\n                                                    \r\n                                                    }\r\n\r\n                                                else {\r\n\r\n                                                    if(classtime[i+1]==='.')\r\n                                                        {  n=3;\r\n                                                            schedule[t].push(((classtime[i]-'0')*2)+1);\r\n                                                            }\r\n                                                    else\r\n                                                        schedule[t].push((classtime[i]-'0')*2);\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                        \r\n                                        \r\n\r\n\r\n                            }//for문 끝  (시간표를 변환해주는 로직)\r\n\r\n\r\n                classtime=schedule;\r\n\r\n              \r\n                \r\n                \r\n            let type;\r\n\r\n            if(imp==='1')\r\n                type='type1';\r\n            else if(imp==='2')\r\n                type='type2';\r\n            else if(imp==='3')\r\n                type='type3';\r\n                            \r\n                onFinal({   type,classname,classtime,profess,classscore ,id  });\r\n                \r\n                id++;\r\n            // table[type].push({classname,classtime,profess,classscore});\r\n\r\n\r\n            \r\n            }) // 현재 LocalData에 있는 원소 각각에 대해 이 함수 실행 \r\n            \r\n            \r\n           onCalculate();\r\n        // onCalculate(); // 상태값을 읽어들임 \r\n            \r\n            \r\n            \r\n            // return <Graph props={localData} />\r\n    \r\n        };  // onresult 끝\r\n    \r\n\r\n     \r\n\r\n    return(\r\n\r\n        <BackTemplate> \r\n\r\n        <ContentBody>\r\n\r\n        <WriteList>\r\n                \r\n            <div className=\"explain\">\r\n                -------------------------------------<br/>\r\n                 1/전자장론/월A 수A/박용배/3<br/>\r\n                1/알고리즘/화E 금E/위규범/ 3<br/>\r\n                1/알고리즘/월D 목D/위규범/ 3<br/>\r\n                1/오픈소스SW입문/금 5.5 6.5 7.5 /안병헌/ 3<br/>\r\n                1 /도메인분석 및 sw설계 / 월B 목B/ 이정태 / 4<br/>\r\n                1 /도메인분석 및 sw설계 / 월D 목D/이정태/  4<br/>\r\n\r\n                1 /창의소프트웨어입문 /월B 목B/이환용/  1<br/>\r\n                -------------------------------------<br/><br/><br/>\r\n            중요도/과목명/시간/교수이름/학점 으로 입력 <br/>\r\n           **************************************************************<br/>\r\n            중요도: 1,2,3 <br/>\r\n            [1: 꼭 수강신청 해야함]  [2: 1보단 덜함]  [3: 2보단 덜함] <br />\r\n            ************************************************************* <br/>\r\n            ex) 중요도 1, 과목명:전자회로 시간:월A 수A 교수이름: 홍길동 학점:3학점 이면 <br/>\r\n            1/전자회로/월A 수A / 홍길동/3   입력 <br/>\r\n            <br/>\r\n         \r\n\r\n            \r\n            </div>\r\n\r\n            <WriteBox onSubmit={onSubmit}>\r\n                \r\n                <input \r\n                placeholder=\"중요도/과목명/시간/교수이름/학점\"\r\n                onChange={onChange}\r\n                value={input}\r\n                />\r\n                <button type=\"submit\">등록 </button>\r\n        \r\n            </WriteBox> \r\n            \r\n            \r\n             </WriteList>\r\n\r\n            <ListTemplate>\r\n\r\n                <h2>현재 신청 리스트</h2>\r\n                \r\n                <DataList dataes={localData} onRemove={onRemove} />\r\n                \r\n                <button onClick={onResult}>결과 보기</button>\r\n\r\n            </ListTemplate>\r\n\r\n\r\n        </ContentBody>\r\n\r\n\r\n        </BackTemplate>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default WriteSchedule;\r\n\r\n\r\n\r\n/*\r\n\r\n분석해야되는 데이터\r\n[객체1,객체2,...]\r\n\r\n양식\r\n{\r\n과목이름:\r\n교수이름:\r\n\r\n중요도:\r\n학점:String\r\n시간:\r\n\r\n}\r\n\r\n데이터 전처리-해야하는일\r\n\r\n1. 중요도로 데이터를 나눔\r\n중요도1 : [,,,]\r\n중요도2: [,,,]\r\n중요도3 : [,,,]\r\n\r\n2.같은 중요도에서 동일 과목 확인(시간은 다른데 과목은 동일)\r\n(링크드리스트형태로 표현?)\r\n\r\n\r\n시간표 객체\r\n{\r\n\r\n신청된 총 학점수:\r\n현재 시간표에 들어있는 과목 객체 배열: [객체1,]    \r\n월:[boolean,],\r\n화:[],\r\n수:[],\r\n목:[],\r\n금:[],\r\n\r\n}\r\n\r\n\r\n\r\n--------------------------------------------\r\n요일 요소 안에 배열은 크기가 30   \r\n첫번째 0은 '2'를 뜻하고\r\n마지막 29는 '30'을 뜻함   \r\n\r\n월 A 라면 시간표->월->0,1,2 번 인덱스 비었는지 확인\r\n월 1.5,2,2.5라면 2를 곱해서 3,4,5로 만든다음 -2를 해서  1,2,3 번 인덱스가 비었는지 확인\r\n(비었으면 false, 찼으면 true)\r\n\r\n\r\n\r\n---------------------------------------\r\n배열에 객체를 저장\r\n\r\n// 시간표 비교해서 true,false 반환\r\nexport compare = function(a){  \r\n\r\n\r\n    \r\n\r\n\r\n} ;\r\n\r\n\r\n// 목록에 시간표 추가함  \r\n \r\n\r\n//시간표 삭제\r\n\r\nexport delete = function(a){\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n-----------------------------------\r\n\r\n        \r\n    const onResult=()=>{\r\n\r\n        // localData 는 문자열 저장된 배열\r\n        \r\n        //학점은 1에서 6까지 있는걸로\r\n\r\n        let splitData=localData.split('/'); \r\n        //중요도/과목명/시간/교수이름/학점\r\n                \r\n        let imp=splitData[0].trim(); // 1~3 앞뒤 공백 제거\r\n        let classname=splitData[1].trim();\r\n\r\n        let classtime=splitData[2].trim();\r\n        \r\n\r\n        let profess=splitData[3].trim();\r\n        let classScore=splitData[4].trim(); // 1~6학점\r\n        \r\n              \r\n            return <Graph props={localData} />\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}